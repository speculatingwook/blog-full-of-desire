{
  "title": "ALU(arithmetic logic unit)",
  "date": "2023-04-17T00:00:00.000Z",
  "tags": ["COMPUTER_SCIENCE", "HARDWARE"],
  "draft": false,
  "summary": "전공공부하면서 같이 공부하는 운영체제",
  "body": {
    "raw": "\n## 산술 논리 장치(ALU, arithmetic login unit)\n\n<p align=\"center\">\n  <img\n    width=\"336\"\n    alt=\"image\"\n    src=\"https://user-images.githubusercontent.com/105579811/232369753-cbd5d725-fb3e-49f3-b744-faab4935bfe7.png\"\n  />\n</p>\n\n산술 논리 장치는 CPU의 핵심 부품이다. ALU는 산술 계산, 불리언 대수 및 기타 연산을 수행하는 방법을 알고 있는 장치다.\n\n### 피연산자(operand)\n\n피연산자는 수를 표현하는 비트일 뿐이다. 연산코드(operation code), 즉 명령코드(opcode)는 피연산자에 대해 ALU가 어떤 연산자(operator)를 적용할 지 지정한다. 결과(result)는 물론 피연산자에 연산자들을 적용한 결과를 뜻한다.\n\n### 조건코드(condition code)\n\n<p align=\"center\">\n  <img\n    width=\"358\"\n    alt=\"image\"\n    src=\"https://user-images.githubusercontent.com/105579811/232371057-c0db0368-d6c9-42ed-8b21-113a6b5f30f8.png\"\n  />\n</p>\n\n조건 코드(condition code)는 결과에 대한 추가 정보가 들어간다. 보통 **조건 코드 레지스터(condition code register)** 라는 레지스터에 조건 코드가 저장된다.\n\n위 그림에서 박스 위에 그려진 숫자는 비트 번호다. 비트 번호를 사용해 각 비트를 편리하게 가리킬 수 있다. 비트중 일부를 사용하지 않는다는 점에 유의해야 한다.(조건 코드 레지스터의 경우에는 이런 일이 자주 일어난다.)\n\nN 비트는 마지막으로 수행한 연산 결과가 음수인 경우 1로 설정된다. Z 비트는 마지막 연산 결과가 0인 경우 1이 된다. O 비트는 마지막 연산에서 오버플로(overflow)나 언더플로(underflow)가 생긴 경우 1이 된다.\n\n### ALU의 명령 코드(opcode) 예시\n\n<p align=\"center\">\n  <img\n    width=\"694\"\n    alt=\"image\"\n    src=\"https://user-images.githubusercontent.com/105579811/232371578-832df354-7ad6-4716-b984-de6204877e31.png\"\n  />\n</p>\n\n### ALU의 내부(일부분)\n\n<p align=\"center\">\n  <img\n    width=\"246\"\n    alt=\"image\"\n    src=\"https://user-images.githubusercontent.com/105579811/232371734-dd27c5dc-33d3-4ce5-92ee-094b72eee041.png\"\n  />\n</p>\n",
    "code": "var Component=(()=>{var l=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var b=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),f=(i,e)=>{for(var t in e)c(i,t,{get:e[t],enumerable:!0})},d=(i,e,t,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of g(e))!m.call(i,a)&&a!==t&&c(i,a,{get:()=>e[a],enumerable:!(r=p(e,a))||r.enumerable});return i};var x=(i,e,t)=>(t=i!=null?l(u(i)):{},d(e||!i||!i.__esModule?c(t,\"default\",{value:i,enumerable:!0}):t,i)),A=i=>d(c({},\"__esModule\",{value:!0}),i);var s=b((N,o)=>{o.exports=_jsx_runtime});var w={};f(w,{default:()=>j,frontmatter:()=>U});var n=x(s()),U={title:\"ALU(arithmetic logic unit)\",date:\"2023-04-17\",tags:[\"COMPUTER_SCIENCE\",\"HARDWARE\"],draft:!1,summary:\"\\uC804\\uACF5\\uACF5\\uBD80\\uD558\\uBA74\\uC11C \\uAC19\\uC774 \\uACF5\\uBD80\\uD558\\uB294 \\uC6B4\\uC601\\uCCB4\\uC81C\"};function h(i){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",h3:\"h3\",strong:\"strong\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h2,{id:\"\\uC0B0\\uC220-\\uB17C\\uB9AC-\\uC7A5\\uCE58alu-arithmetic-login-unit\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#\\uC0B0\\uC220-\\uB17C\\uB9AC-\\uC7A5\\uCE58alu-arithmetic-login-unit\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"\\uC0B0\\uC220 \\uB17C\\uB9AC \\uC7A5\\uCE58(ALU, arithmetic login unit)\"]}),(0,n.jsx)(\"p\",{align:\"center\",children:(0,n.jsx)(\"img\",{width:\"336\",alt:\"image\",src:\"https://user-images.githubusercontent.com/105579811/232369753-cbd5d725-fb3e-49f3-b744-faab4935bfe7.png\"})}),(0,n.jsx)(e.p,{children:\"\\uC0B0\\uC220 \\uB17C\\uB9AC \\uC7A5\\uCE58\\uB294 CPU\\uC758 \\uD575\\uC2EC \\uBD80\\uD488\\uC774\\uB2E4. ALU\\uB294 \\uC0B0\\uC220 \\uACC4\\uC0B0, \\uBD88\\uB9AC\\uC5B8 \\uB300\\uC218 \\uBC0F \\uAE30\\uD0C0 \\uC5F0\\uC0B0\\uC744 \\uC218\\uD589\\uD558\\uB294 \\uBC29\\uBC95\\uC744 \\uC54C\\uACE0 \\uC788\\uB294 \\uC7A5\\uCE58\\uB2E4.\"}),(0,n.jsxs)(e.h3,{id:\"\\uD53C\\uC5F0\\uC0B0\\uC790operand\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#\\uD53C\\uC5F0\\uC0B0\\uC790operand\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"\\uD53C\\uC5F0\\uC0B0\\uC790(operand)\"]}),(0,n.jsx)(e.p,{children:\"\\uD53C\\uC5F0\\uC0B0\\uC790\\uB294 \\uC218\\uB97C \\uD45C\\uD604\\uD558\\uB294 \\uBE44\\uD2B8\\uC77C \\uBFD0\\uC774\\uB2E4. \\uC5F0\\uC0B0\\uCF54\\uB4DC(operation code), \\uC989 \\uBA85\\uB839\\uCF54\\uB4DC(opcode)\\uB294 \\uD53C\\uC5F0\\uC0B0\\uC790\\uC5D0 \\uB300\\uD574 ALU\\uAC00 \\uC5B4\\uB5A4 \\uC5F0\\uC0B0\\uC790(operator)\\uB97C \\uC801\\uC6A9\\uD560 \\uC9C0 \\uC9C0\\uC815\\uD55C\\uB2E4. \\uACB0\\uACFC(result)\\uB294 \\uBB3C\\uB860 \\uD53C\\uC5F0\\uC0B0\\uC790\\uC5D0 \\uC5F0\\uC0B0\\uC790\\uB4E4\\uC744 \\uC801\\uC6A9\\uD55C \\uACB0\\uACFC\\uB97C \\uB73B\\uD55C\\uB2E4.\"}),(0,n.jsxs)(e.h3,{id:\"\\uC870\\uAC74\\uCF54\\uB4DCcondition-code\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#\\uC870\\uAC74\\uCF54\\uB4DCcondition-code\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"\\uC870\\uAC74\\uCF54\\uB4DC(condition code)\"]}),(0,n.jsx)(\"p\",{align:\"center\",children:(0,n.jsx)(\"img\",{width:\"358\",alt:\"image\",src:\"https://user-images.githubusercontent.com/105579811/232371057-c0db0368-d6c9-42ed-8b21-113a6b5f30f8.png\"})}),(0,n.jsxs)(e.p,{children:[\"\\uC870\\uAC74 \\uCF54\\uB4DC(condition code)\\uB294 \\uACB0\\uACFC\\uC5D0 \\uB300\\uD55C \\uCD94\\uAC00 \\uC815\\uBCF4\\uAC00 \\uB4E4\\uC5B4\\uAC04\\uB2E4. \\uBCF4\\uD1B5 \",(0,n.jsx)(e.strong,{children:\"\\uC870\\uAC74 \\uCF54\\uB4DC \\uB808\\uC9C0\\uC2A4\\uD130(condition code register)\"}),\" \\uB77C\\uB294 \\uB808\\uC9C0\\uC2A4\\uD130\\uC5D0 \\uC870\\uAC74 \\uCF54\\uB4DC\\uAC00 \\uC800\\uC7A5\\uB41C\\uB2E4.\"]}),(0,n.jsx)(e.p,{children:\"\\uC704 \\uADF8\\uB9BC\\uC5D0\\uC11C \\uBC15\\uC2A4 \\uC704\\uC5D0 \\uADF8\\uB824\\uC9C4 \\uC22B\\uC790\\uB294 \\uBE44\\uD2B8 \\uBC88\\uD638\\uB2E4. \\uBE44\\uD2B8 \\uBC88\\uD638\\uB97C \\uC0AC\\uC6A9\\uD574 \\uAC01 \\uBE44\\uD2B8\\uB97C \\uD3B8\\uB9AC\\uD558\\uAC8C \\uAC00\\uB9AC\\uD0AC \\uC218 \\uC788\\uB2E4. \\uBE44\\uD2B8\\uC911 \\uC77C\\uBD80\\uB97C \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uB294\\uB2E4\\uB294 \\uC810\\uC5D0 \\uC720\\uC758\\uD574\\uC57C \\uD55C\\uB2E4.(\\uC870\\uAC74 \\uCF54\\uB4DC \\uB808\\uC9C0\\uC2A4\\uD130\\uC758 \\uACBD\\uC6B0\\uC5D0\\uB294 \\uC774\\uB7F0 \\uC77C\\uC774 \\uC790\\uC8FC \\uC77C\\uC5B4\\uB09C\\uB2E4.)\"}),(0,n.jsx)(e.p,{children:\"N \\uBE44\\uD2B8\\uB294 \\uB9C8\\uC9C0\\uB9C9\\uC73C\\uB85C \\uC218\\uD589\\uD55C \\uC5F0\\uC0B0 \\uACB0\\uACFC\\uAC00 \\uC74C\\uC218\\uC778 \\uACBD\\uC6B0 1\\uB85C \\uC124\\uC815\\uB41C\\uB2E4. Z \\uBE44\\uD2B8\\uB294 \\uB9C8\\uC9C0\\uB9C9 \\uC5F0\\uC0B0 \\uACB0\\uACFC\\uAC00 0\\uC778 \\uACBD\\uC6B0 1\\uC774 \\uB41C\\uB2E4. O \\uBE44\\uD2B8\\uB294 \\uB9C8\\uC9C0\\uB9C9 \\uC5F0\\uC0B0\\uC5D0\\uC11C \\uC624\\uBC84\\uD50C\\uB85C(overflow)\\uB098 \\uC5B8\\uB354\\uD50C\\uB85C(underflow)\\uAC00 \\uC0DD\\uAE34 \\uACBD\\uC6B0 1\\uC774 \\uB41C\\uB2E4.\"}),(0,n.jsxs)(e.h3,{id:\"alu\\uC758-\\uBA85\\uB839-\\uCF54\\uB4DCopcode-\\uC608\\uC2DC\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#alu\\uC758-\\uBA85\\uB839-\\uCF54\\uB4DCopcode-\\uC608\\uC2DC\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"ALU\\uC758 \\uBA85\\uB839 \\uCF54\\uB4DC(opcode) \\uC608\\uC2DC\"]}),(0,n.jsx)(\"p\",{align:\"center\",children:(0,n.jsx)(\"img\",{width:\"694\",alt:\"image\",src:\"https://user-images.githubusercontent.com/105579811/232371578-832df354-7ad6-4716-b984-de6204877e31.png\"})}),(0,n.jsxs)(e.h3,{id:\"alu\\uC758-\\uB0B4\\uBD80\\uC77C\\uBD80\\uBD84\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#alu\\uC758-\\uB0B4\\uBD80\\uC77C\\uBD80\\uBD84\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"ALU\\uC758 \\uB0B4\\uBD80(\\uC77C\\uBD80\\uBD84)\"]}),(0,n.jsx)(\"p\",{align:\"center\",children:(0,n.jsx)(\"img\",{width:\"246\",alt:\"image\",src:\"https://user-images.githubusercontent.com/105579811/232371734-dd27c5dc-33d3-4ce5-92ee-094b72eee041.png\"})})]})}function _(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(h,i)})):h(i)}var j=_;return A(w);})();\n;return Component;"
  },
  "_id": "blog/computer/cpu/ALU.mdx",
  "_raw": {
    "sourceFilePath": "blog/computer/cpu/ALU.mdx",
    "sourceFileName": "ALU.mdx",
    "sourceFileDir": "blog/computer/cpu",
    "contentType": "mdx",
    "flattenedPath": "blog/computer/cpu/ALU"
  },
  "type": "Blog",
  "readingTime": {
    "text": "3 min read",
    "minutes": 2.06,
    "time": 123600,
    "words": 412
  },
  "slug": "computer/cpu/ALU",
  "path": "blog/computer/cpu/ALU",
  "filePath": "blog/computer/cpu/ALU.mdx",
  "toc": [
    {
      "value": "산술 논리 장치(ALU, arithmetic login unit)",
      "url": "#산술-논리-장치alu-arithmetic-login-unit",
      "depth": 2
    },
    {
      "value": "피연산자(operand)",
      "url": "#피연산자operand",
      "depth": 3
    },
    {
      "value": "조건코드(condition code)",
      "url": "#조건코드condition-code",
      "depth": 3
    },
    {
      "value": "ALU의 명령 코드(opcode) 예시",
      "url": "#alu의-명령-코드opcode-예시",
      "depth": 3
    },
    {
      "value": "ALU의 내부(일부분)",
      "url": "#alu의-내부일부분",
      "depth": 3
    }
  ],
  "structuredData": {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": "ALU(arithmetic logic unit)",
    "datePublished": "2023-04-17T00:00:00.000Z",
    "dateModified": "2023-04-17T00:00:00.000Z",
    "description": "전공공부하면서 같이 공부하는 운영체제",
    "image": "/static/images/rose.png",
    "url": "https://blog-full-of-desire.vercel.app//blog/computer/cpu/ALU"
  }
}
